
import { News } from '../typings';
import produce from 'immer';
import { Action, AddAction, ActionTypes, DeleteAction } from './store.typings';

export const sampleNews: News = {
    timestamp: 1,
    text: `Преподаватель одесского Ришельевского лицея Павел Виктор создал углублённый курс физики для специализированных физико-математических школ. Курс состоит из 473 видео и выложен на ютьюб-канале «РЛ-физика».

    На сайте лицея сообщается, что курс Павла Виктора охватывает все темы углублённой программы 9-11 классов от «Механики» до «Физики ядра», также есть избранные темы для 7-8 классов.
    
    Трансляции учителя набрали более 7 млн просмотров. На его личный ютьюб-канал подписаны почти 60 000 пользователей.
    
    YouTube41:34
    Учитель рассказал AIN.ua, что идея транслировать уроки возникла, когда заболевшие ученики начали просить его связываться с ними через скайп, чтобы не пропускать уроки. После нескольких дистанционных уроков преподаватель решил попробовать снимать уроки на видео и выкладывать в интернет.
    
    Администрация лицея и родители поддержали идею и помогли установить в аудитории оборудование, которое позволяет проводить трансляции в хорошем качестве: «Появилась возможность транслировать уроки в реальном времени прямо на ютьюб, а там они записываются. Попробовали, получилось, вроде понравилось. Тогда я решил записывать все уроки подряд».
    
    Учитель считает, что его онлайн-курс стал успешным, потому что он естественный и живой: «Почему у меня получилось? Я просто вел уроки, я не шел специально ни на какую студию, моих видео не коснулся монтажер. Это просто эфир. И в этом кроется два преимущества: во-первых, это наименее трудозатратно и поэтому выполнимо, во-вторых, это живой урок, и у зрителей возникает эффект присутствия. К доске выходят дети, общаются с преподавателем, и получается, ты как-бы еще один ученик в классе».`,
    title: 'SUPER Title'
};

export interface IState {
    newsList: News[];
}

export const initialState: IState = {
    newsList: [sampleNews]
}


export const reducer = (state: IState, action: Action): IState => produce(state, draft => {
    switch (action.name) {
        case ActionTypes.add:
            draft.newsList.push((action as AddAction).payload);
            return;
        case ActionTypes.delete:
            draft.newsList = draft.newsList.filter(ni => ni.timestamp !== (action as DeleteAction).payload.timestamp);
            return;
        default:
            return draft;
    }
});